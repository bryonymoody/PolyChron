name: Linux

on:
  # on push to any branch
  push:
  # On workflow dispatch events (i.e. can manually run)
  workflow_dispatch:

jobs:
  linux:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      # Configure the build matrix, to test multiple python version potentially across multiple os/architectures
      matrix:
        os:
          - ubuntu-24.04
          - ubuntu-24.04-arm
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
    env:
      # DISPLAY env variable for xvfb / tkinter to open in GUI
      DISPLAY: ":99.0"

    # Prevent the job from running for 6 hours, in case a gui window was opened. This may need increasing in the future
    timeout-minutes: 30

    steps:
      # Checkout this repository
      - uses: actions/checkout@v4

      # Select the appropriate python version
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      # Install Xvfb for tkinter support in GitHub Actions
      - name : Install Xvfb
        run: |
          sudo apt-get -y install xvfb

      # Install non-python dependencies
      - name: Install non-python dependencies
        run: |
          sudo apt-get -y install graphviz

      # Install the package into the current python environment
      - name: Install polychron
        run: |
          python3 -m pip install -U pip
          python3 -m pip install .

      # Start xvfb so that tkinter windows will open.
      - name: Start Xvfb
        run: |
          sudo Xvfb $DISPLAY -screen 0 1280x1024x24 > /dev/null 2>&1 &
          echo "Xvfb started"

      # Check that the polychron package has been installed via importlib.metadata
      - name: Check polychron installed via importlib.metadata
        run: |
          python3 -c "from importlib.metadata import version; print(version('polychron'))"

      # Run the polychron module to ensure it is installed. use --help to prevent gui hanging
      - name: Run polychron as a module
        run: |
          python3 -m polychron --help

      # Run the polychron binary to ensure it is installed. use --version to prevent gui hanging
      - name: Run polychron via the executable script
        run: |
          polychron --version

      # Install the package into the current python environment with the test extras
      - name: Install polychron with extras
        run: |
          python3 -m pip install .[test]

      # Run the test suite
      - name: Run pytest
        run: |
          python3 -m pytest
