[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "polychron"
dynamic = ["version"]
requires-python = ">= 3.9"
authors = [
    {name = "Bryony Moody", email = "bryony.moody@sheffield.ac.uk"},
    {name = "Peter Heywood", email = "p.heywood@sheffield.ac.uk"},
]
maintainers = [
    {name = "Bryony Moody", email = "bryony.moody@sheffield.ac.uk"},
]
readme = "README.md"
license = "GPL-3.0-only"
license-files = ["LICENSE"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    # Ensure this package does not get uploaded to pypi until it is ready.
    "Private :: Do Not Upload",
]
dependencies = [
    "graphviz",
    "lxml>=6",
    "numpy>=2",
    "matplotlib",
    "networkx>=3.4; python_version >= '3.10'", # required for https://github.com/networkx/networkx/pull/7588, but not available for py 3.9
    "networkx>=2; python_version < '3.10'",
    "packaging",
    "pandas>=2",
    "pydot<4", # pydot 4 includes an api break which requires network 3.5 to support.
    "pyyaml",
    "ttkthemes",
]

# When widely supported, it would be better to leverage [dependency-groups] than optional-extras for at least dev. https://packaging.python.org/en/latest/specifications/dependency-groups
[project.optional-dependencies]
doc = [
    "mkdocstrings[python]>=0.18",
    "mkdocs-material>=9.5.0",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-section-index",
    "markdown-callouts",
]
test = [
    "pytest>=6.0"
]
dev = [
    "ruff"
]

[project.urls]
# Documentation = "https://bryonymoody.github.io/PolyChron"
Repository = "https://github.com/bryonymoody/PolyChron"
Issues = "https://github.com/bryonymoody/PolyChron/issues"

[project.scripts]
polychron = "polychron.entrypoint:main"

[tool.hatch.version]
path = "src/polychron/_version.py"

# pytest options
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra -q",
    "--import-mode=importlib",
]
testpaths = [
    "tests",
]
filterwarnings = [
    # Suppress nx_pydot DeprecationWarnings, which are raised by some verisons of pydot but have since been un-deprecated
    "ignore:.*nx.nx_pydot.*:DeprecationWarning",
]
markers = [
    "importable: marks tests as import-only (deselect with '-m \"not importable\"')",
]

# Lint & Format configuration
[tool.ruff]
line-length = 120
indent-width = 4
# Exclude pre-existing files until they have intentionally been linted
extend-exclude = [
    "src/polychron/automated_mcmc_ordering_coupling_copy.py",
]

[tool.ruff.lint]
# Select which ruff rules to apply when linting.
select = ["E4", "E7", "E9", "F", "I", "PT"]
# But ignore some of them
ignore = [
    "E741", # https://docs.astral.sh/ruff/rules/ambiguous-variable-name/
]

[tool.ruff.format]
exclude = [
    "src/polychron/gui.py",
]
